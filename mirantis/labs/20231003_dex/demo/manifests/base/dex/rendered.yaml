---
# Source: dex/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dex
  labels:
    helm.sh/chart: dex-0.15.3
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: dex
    app.kubernetes.io/version: "2.37.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: dex/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
  labels:
    helm.sh/chart: dex-0.15.3
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: dex
    app.kubernetes.io/version: "2.37.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["list", "create"]
---
# Source: dex/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex-cluster
  labels:
    helm.sh/chart: dex-0.15.3
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: dex
    app.kubernetes.io/version: "2.37.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: dex
subjects:
- kind: ServiceAccount
  namespace: dexidp
  name: dex
---
# Source: dex/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dex
  labels:
    helm.sh/chart: dex-0.15.3
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: dex
    app.kubernetes.io/version: "2.37.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["dex.coreos.com"]
    resources: ["*"]
    verbs: ["*"]
---
# Source: dex/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dex
  labels:
    helm.sh/chart: dex-0.15.3
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: dex
    app.kubernetes.io/version: "2.37.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: dex  
subjects:
- kind: ServiceAccount
  namespace: dexidp
  name: dex
---
# Source: dex/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dex
  labels:
    helm.sh/chart: dex-0.15.3
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: dex
    app.kubernetes.io/version: "2.37.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 5556
      targetPort: http
      protocol: TCP
      appProtocol: http
    - name: https
      port: 5554
      targetPort: https
      protocol: TCP
      appProtocol: https
    - name: telemetry
      port: 5558
      targetPort: telemetry
      protocol: TCP
      appProtocol: http
  selector:
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: dex
---
# Source: dex/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dex
  labels:
    helm.sh/chart: dex-0.15.3
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: dex
    app.kubernetes.io/version: "2.37.0"
    app.kubernetes.io/managed-by: Helm
    
  
spec:
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: dex
      app.kubernetes.io/instance: dex
  template:
    metadata:
      annotations:
      
      labels:
        app.kubernetes.io/name: dex
        app.kubernetes.io/instance: dex
    spec:
      serviceAccountName: dex
      securityContext:
        {}
      containers:
        - name: dex
          securityContext:
            {}
          image: "ghcr.io/dexidp/dex:v2.37.0"
          imagePullPolicy: IfNotPresent
          args:
            - dex
            - serve
            - --web-http-addr
            - 0.0.0.0:5556
            - --web-https-addr
            - 0.0.0.0:5554
            - --telemetry-addr
            - 0.0.0.0:5558
            - /etc/dex/config.yaml
          env:
          ports:
            - name: http
              containerPort: 5556
              protocol: TCP
            - name: https
              containerPort: 5554
              protocol: TCP
            - name: telemetry
              containerPort: 5558
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: telemetry
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: telemetry
          resources:
            {}
          volumeMounts:
            - name: config
              mountPath: /etc/dex
              readOnly: true
            - mountPath: /etc/dex/tls
              name: tls
      volumes:
        - name: config
          secret:
            secretName: dex
        - name: tls
          secret:
            secretName: dex-tls
---
# Source: dex/templates/tests/no-config-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dex-test-no-create
  labels:
    helm.sh/chart: dex-0.15.3
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: dex
    app.kubernetes.io/version: "2.37.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
type: Opaque
data:
  config.yaml: "e30="
